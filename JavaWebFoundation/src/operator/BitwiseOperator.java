package operator;

public class BitwiseOperator {

	public static void main(String[] args) {
		//BO:把10進位整數轉換成2進位
		
		//&（"與"運算符號）:如果對應兩者都有1才會是1,其餘為0
		System.out.println(144 & 26);
		//原因：144是10010000,26是00011010,
		//所以結果是00010000=2的4次方=16
		
		//|（"或"運算符號）:如果對應兩者其一有1就會是1,其餘為0
		System.out.println(144 | 26);
		//原因：144是10010000,26是00011010,
		//所以結果是10011010=(128+16+8+2)=154
		
		//^（"互斥或"運算符號）:如果對應兩者不相同的時候是1(除了兩個都是0除外),其餘為0
		System.out.println(144 ^ 26);
		//原因：144是10010000,26是00011010,
		//所以結果是10001010=(128+8+2)=138
		
		//~（"互斥"運算符號）:把原本的位元由0變成1,1變成0
		//TODO 這邊不懂
		System.out.println(~144);
		//原因：
		//所以結果是
		
		//<<（"左移"運算符號）:把原本的位元由右往左推,右邊補0
		System.out.println(144<<1);
		//原因：144是10010000,左推1以後
		//結果是100100000,256+32=288
		//左推一次其實等於乘2
		
	}

}
